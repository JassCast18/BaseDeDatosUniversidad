CREATE TABLE Personas (
    ID_Persona NUMBER PRIMARY KEY,
    Nombre VARCHAR2(50),
    Apellido VARCHAR2(50),
    Email VARCHAR2(100)
);
CREATE TABLE Departamentos (
    ID_Departamento NUMBER PRIMARY KEY,
    Nombre VARCHAR2(100) NOT NULL,
    Ubicacion VARCHAR2(100)
);
CREATE TABLE Cursos (
    ID_Curso NUMBER PRIMARY KEY,
    Nombre VARCHAR2(100),
    Creditos NUMBER,
    ID_Departamento NUMBER,
    CONSTRAINT fk_departamento
        FOREIGN KEY (ID_Departamento)
        REFERENCES Departamentos(ID_Departamento)
);
CREATE TABLE Aulas (
    ID_Aula NUMBER PRIMARY KEY,
    Nombre VARCHAR2(50),
    Capacidad NUMBER,
    ID_Departamento NUMBER,
    CONSTRAINT fk_departamento_aula
        FOREIGN KEY (ID_Departamento)
        REFERENCES Departamentos(ID_Departamento)
);
CREATE TABLE Horarios (
    ID_Horario NUMBER PRIMARY KEY,
    ID_Curso NUMBER,
    ID_Aula NUMBER,
    Dia VARCHAR2(10), -- Por ejemplo, 'Lunes', 'Martes', etc.
    Hora_Inicio DATE, -- Formato 'HH24:MI:SS' para la hora
    Hora_Fin DATE,    -- Formato 'HH24:MI:SS' para la hora
    CONSTRAINT fk_curso
        FOREIGN KEY (ID_Curso)
        REFERENCES Cursos(ID_Curso),
    CONSTRAINT fk_aula
        FOREIGN KEY (ID_Aula)
        REFERENCES Aulas(ID_Aula)
);

CREATE TYPE PERSONA AS OBJECT (
    CODIGO_PERSONA NUMBER,
    NOMBRE VARCHAR2(100),  -- Especifica el tamaño del VARCHAR2
    
    MAP MEMBER FUNCTION GET_CODIGO_PERSONA RETURN NUMBER,
    MEMBER FUNCTION GET_NOMBRE RETURN VARCHAR2,
    MEMBER PROCEDURE MOSTRAR(SELF IN OUT NOCOPY PERSONA)
) NOT FINAL;
/
CREATE TYPE BODY PERSONA AS
    MEMBER FUNCTION GET_CODIGO_PERSONA RETURN NUMBER IS
    BEGIN
        RETURN CODIGO_PERSONA;
    END GET_CODIGO_PERSONA;

    MEMBER FUNCTION GET_NOMBRE RETURN VARCHAR2 IS
    BEGIN
        RETURN NOMBRE;
    END GET_NOMBRE;

    MEMBER PROCEDURE MOSTRAR(SELF IN OUT NOCOPY PERSONA) IS
    BEGIN
        DBMS_OUTPUT.PUT_LINE(TO_CHAR(CODIGO_PERSONA) || ' ' || NOMBRE);
    END MOSTRAR;
END;
/
CREATE TYPE ESTUDIANTES UNDER PERSONA(
    CODIGO_ESTUDIANTE NUMBER,
    
    MEMBER  FUNCTION GET_CODIGO_ESTUDIANTE RETURN NUMBER,
    OVERRIDING MEMBER PROCEDURE  MOSTRAR(SELF IN OUT NOCOPY ESTUDIANTES)
)NOT FINAL;
/
CREATE TYPE BODY ESTUDIANTES AS
    MEMBER FUNCTION GET_CODIGO_ESTUDIANTE RETURN NUMBER IS
    BEGIN
        RETURN CODIGO_ESTUDIANTE;
    END;
    OVERRIDING MEMBER PROCEDURE MOSTRAR (SELF IN OUT NOCOPY ESTUDIANTES) IS
    BEGIN
        DBMS_OUTPUT.PUT_LINE(TO_CHAR(CODIGO_PERSONA|| NOMBRE || CODIGO_ESTUDIANTE));
    END MOSTRAR;
END;



CREATE SEQUENCE S_CURSO
    START WITH 1
    INCREMENT BY 1
    MAXVALUE 100
    MINVALUE 1;
 

INSERT INTO CURSOS VALUES(S_LIBRO.NEXTVAL, 'CARAZAMBA', 'GUATEMALA',100);